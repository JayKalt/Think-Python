STRINGS:

USEFUL METHODS:
------
. string.upper()  >  changes all string char from lower to upper
. string.lower()  >  same as lower but viceversa
. string.capitalize()  >  capitalize the first letter
. string.swapcase()  >  revert the case of each char
. string.split()  >  splits a string of multi words into a single words list removing whitespace
------
. enumaerate(list)  > associates each element to its index
. list(...) ? does something which is probably associated with some methods
------


NEGATIVE INDEX:
We can work with negative index that starts from the end of the word
and goes up to the first.
E.G:
  world = "Test"

word[-1] = t
You can use it for index of any list.


COMPARE STRINGS:
We can compare strings. The only thing to really remember is that
upper case letteres come first then lowercase letters. That's all.


STRINGS ARE IMMUTABLE!!!!!


OPTIONAL PARAMETERS:
Optional parameters are assigned if they find a match between the call
and the arguments.
If they don't, it will assign a default vaule specificed in the def.
E.G:
  def find(haystack, needle, start=0):
    ....
In this case, if the call finds a match to the start parameter it will
assign the value, else start will be zero.





FORMAT METHOD:
If we want to format a method we can do it using format method which
apparently is the most powerful way to do it:

  print("His name is {0}".format("Arthur"))

This is done by using PLACEHOLDERS which are those {..} within a number
that match the position of the word to be replaced with.

There are also format specifications that can be used to personalize the
string. For example:

  .  {0:.3f} prints 3 decimal numbers after the integer part

  .  "|||{0:<15}|||{1:^15}|||{2:>15}|||Born in {3}|||" this string says
      to allineate the text to the left by 15 spaces
      then to do it in the middle by other 15 spaces
      then on the right by other 15 and finally to print something in the
      end
